apiVersion: v1
kind: Service
metadata:
  name: balance-transfer
spec:
  type: ClusterIP
  ports:
    - port: 4000
      targetPort: 4000
      protocol: TCP
  selector:
    name: balance-transfer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: balance-transfer
spec:
  replicas: 1
  selector:
    matchLabels:
      name: balance-transfer
  template:
    metadata:
      labels:
        name: balance-transfer
    spec:
      volumes:
        #- name: balance-transfer-data
        #  persistentVolumeClaim:
            claimName: balance-transfer-data-pvc
            @@replace_my_crypto_artifacts@@
      imagePullSecrets:
      - name: container-registry-cred
      containers:
        - name: balance-transfer
          image: image_url
          imagePullPolicy: Always
          ports:
            - containerPort: 4000
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: 4000
          command:
            - bash
            - -c
            - |
              echo "installing GO" 
              cd /usr/local
              curl -O https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz
              tar -xvf go1.10.3.linux-amd64.tar.gz
              echo "export PATH=$PATH:/usr/local/go/bin" >> /root/.bashrc
              source /root/.bashrc

              echo "configuring application"
              mkdir /application
              cd /application
              cp -r /balance-transfer/* ./
              cp -Lr /crypto-data/* ./artifacts/
              #npm install
              node app
          volumeMounts:
            #- mountPath: /application
            #  name: balance-transfer-data
              @@replace_my_crypto_artifacts@@
#---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: balance-transfer-data-pvc
#spec:
#  accessModes:
#    - "ReadWriteOnce"
#  resources:
#    requests:
#      storage: "5Gi"

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: balance-transfer
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "http"
spec:
  rules:
    - host: application_domain
      http:
        paths:
        - backend:
            serviceName: balance-transfer
            servicePort: 4000
